generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum UserRole {
  SB_OWNER
  ORG_OWNER
  ORG_ADMIN
  ORG_CLIENT
}

enum ApplicationStatus {
  CREATED
  INPROGRESS
  SUBMITTED
  APPROVED
  REJECTED
}

model Organization {
  id   String @id @default(cuid())
  name String @unique

  users User[]
}

model User {
  id              String    @id @default(cuid())
  organizationId  String?
  name            String?
  email           String?
  emailVerified   DateTime?
  image           String?
  password        String?
  role            UserRole @default(ORG_CLIENT)
  
  accounts        Account[]
  organization    Organization? @relation(fields: [organizationId], references: [id])
  templates       Template[]
  applications    Application[]
  assignedClients Application[] @relation("AssignedClient")

  @@unique([organizationId, email])
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime
  
  @@unique([email, token])
}

model Template {
  id      String @id @default(cuid())
  userId  String
  title   String @default("Untitled")
  description String?
  body    Json?
  
  user    User @relation(fields: [userId], references: [id])
}

model Application {
  id          String @id @default(cuid())
  userId      String
  clientId    String
  status      ApplicationStatus @default(CREATED)
  body        Json?

  user        User   @relation(fields: [userId], references: [id])
  client      User   @relation("AssignedClient", fields: [clientId], references: [id])
}
